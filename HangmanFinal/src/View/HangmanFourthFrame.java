/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package View;

import Controller.*;
import Model.*;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.PlainDocument;

/**
 *
 * @author mathu
 */
public class HangmanFourthFrame extends javax.swing.JFrame {

    /**
     * Creates new form HangmanFourthFrame
     */
    private String tempSecretWord = "";
    private int wordLength = 0;
    private String numOfTries = "";
    private int numOfPlayers = 0;
    private int dashCount = 0;  
    Game hangmanGame;
    Player pNow;
    List<String> guessProgress = null;
    public HangmanFourthFrame(HangmanThirdFrame hTF, int secretInputLength, String secretWord, String tryCount, int playerCount) {
        hTF.dispatchEvent(new WindowEvent(hTF, WindowEvent.WINDOW_CLOSING));
        tempSecretWord = secretWord;
        wordLength = secretInputLength;
        numOfTries = tryCount;
        numOfPlayers = playerCount;    
        hangmanGame = new Game(numOfPlayers, Integer.parseInt(numOfTries));        
        hangmanGame.setWord(tempSecretWord);
        pNow = hangmanGame.switchPlayers();
        setNumOfTriesForEachPlayer();
        initComponents();
        generateDashes();      
        playNumber.setEditable(false);
        noOfTries.setEditable(false);
        noOfTries.setText(numOfTries);  
        guessLetter.requestFocus();
    }
    
    public HangmanFourthFrame()
    {
        
    }
    
    private void setNumOfTriesForEachPlayer()
    {
         for (int nn = 0; nn < numOfPlayers; nn++) {
                    hangmanGame.players[nn].setNumOfTries(Integer.parseInt(numOfTries));
                }
    }
    
    private void generateDashes()
    {
        String dashes = new String();        
        for(int x = 0; x < wordLength; x++)
        {
            if(x == 0)
            {
                dashes = "_   ";
            }
            else
            {
                dashes = dashes + "_   ";
            }
            
        }
        guessedWord.setText(dashes);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        playNumber = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        noOfTries = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        guessedWord = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        guessLetter = new javax.swing.JTextField(1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Game Begins !");
        setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("Player:");

        playNumber.setText("1");
        playNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playNumberActionPerformed(evt);
            }
        });

        jLabel2.setText("Tries Remaining:");

        noOfTries.setEditable(false);

        jLabel3.setText("Guess Letter:");

        guessedWord.setText("jLabel5");

        jButton1.setText("ValidateGuess");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        class JTextFieldLimit extends PlainDocument {
            private int limit;
            JTextFieldLimit(int limit) {
                super();
                this.limit = limit;
            }
            public void insertString
            (int offset, String  str, AttributeSet attr)
            throws BadLocationException {
                if (str == null) return;

                if ((getLength() + str.length()) <= limit) {
                    super.insertString(offset, str, attr);
                }
            }
        }
        guessLetter.setDocument(new JTextFieldLimit(1));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(guessedWord)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(guessLetter, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(playNumber, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                                .addComponent(noOfTries, javax.swing.GroupLayout.Alignment.LEADING)))))
                .addContainerGap(156, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(playNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(noOfTries, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(guessLetter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(guessedWord)
                .addGap(49, 49, 49)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void playNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_playNumberActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:       
        guessProgress = null;
        String guessInput = guessLetter.getText();
        //pNow.numOfMissed = 0;
        boolean tet = hangmanGame.guessLetter(guessInput, pNow);
        if (tet) {
            JOptionPane.showMessageDialog(null, "Correct Guess");
            guessLetter.setText("");              
            guessLetter.requestFocus();
            //guessLetter.setHorizontalAlignment(JTextField.LEFT);           
        } else {
            JOptionPane.showMessageDialog(null, "Wrong guess");
            pNow = hangmanGame.switchPlayers(); 
            //JOptionPane.showMessageDialog(null, pNow.playerName + String.valueOf(pNow.numOfTries));
            if(pNow.outOfGame)
            {
                pNow = hangmanGame.switchPlayers();                            
            }
            playNumber.setText(pNow.getPlayerName());
            noOfTries.setText(String.valueOf(pNow.getNumOfTries()));
            guessLetter.setText("");
            guessLetter.requestFocus();
        }        
        guessProgress = hangmanGame.statusOfGame().get("Progress");
        
         String currentGuess = guessedWord.getText();         
         char currentGuessArray[] = currentGuess.toCharArray();         
         for (int loopIndex = 0; loopIndex < guessProgress.size(); loopIndex++) {
                            String guessCharString = guessProgress.get(loopIndex);
                            char guessChar = guessCharString.charAt(0);
                            currentGuessArray[4*loopIndex] = guessChar;                                                        
                        }
         guessedWord.setText(new String(currentGuessArray));
         if (hangmanGame.isGameOver() != null) { //guessProgress.size() == tempSecretWord.length()
                            JOptionPane.showMessageDialog(null, hangmanGame.isGameOver());
                            this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
                        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HangmanFourthFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HangmanFourthFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HangmanFourthFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HangmanFourthFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                HangmanFourthFrame hFF = new HangmanFourthFrame();       
                Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
                        int x = (int) ((dimension.getWidth() - hFF.getWidth()) / 2);
                        int y = (int) ((dimension.getHeight() - hFF.getHeight()) / 2);
                        hFF.setLocation(x, y);
                        hFF.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField guessLetter;
    private javax.swing.JLabel guessedWord;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField noOfTries;
    private javax.swing.JTextField playNumber;
    // End of variables declaration//GEN-END:variables
}
